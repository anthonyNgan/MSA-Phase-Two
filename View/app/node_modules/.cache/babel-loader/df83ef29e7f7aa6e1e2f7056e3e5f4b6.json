{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antho\\\\source\\\\repos\\\\chiropractordashboard\\\\chiropractordashboard\\\\View\\\\app\\\\src\\\\components\\\\Chiropractors\\\\Chiropractors.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { getArray } from '../../api/api';\nimport { useForm } from \"react-hook-form\";\n\nconst Chiropractors = () => {\n  const [chiropractorDetails, setchiropractorDetails] = useState([]);\n  const {\n    handleSubmit,\n    register,\n    errors\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(\"data\", data);\n  };\n\n  useEffect(() => {\n    const makeArrayRequest = async () => {\n      setchiropractorDetails(await getArray());\n    };\n\n    makeArrayRequest();\n  }, []);\n  /*const [PostDetails, setPostDetails] = useState('');\r\n  const handlePostDetailsChange = (x: any | null) => {\r\n      setPostDetails(x);\r\n  }\r\n  const [HasFocus, setHasFocus] = useState<boolean>(false);\r\n    const handleSubmit = () => {\r\n      console.log(PostDetails);\r\n  }*/\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, chiropractorDetails.map(x => /*#__PURE__*/React.createElement(\"li\", {\n    key: x.chiropractorId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 47\n    }\n  }, \" \", x.firstName, \" \", x.firstName, \" \", x.emailAddress, \" \", x.phoneNumber, \" \", x.timeCreated)), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"firstName\",\n    ref: register({\n      required: \"Required\",\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n        message: \"invalid email address\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }), errors.firstName && errors.firstName.message, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"lastName\",\n    ref: register({\n      validate: value => value !== \"admin\" || \"Nice try!\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }), errors.lastname && errors.lastname.message, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"Submit\")));\n};\n\nexport default Chiropractors;","map":{"version":3,"sources":["C:/Users/antho/source/repos/chiropractordashboard/chiropractordashboard/View/app/src/components/Chiropractors/Chiropractors.tsx"],"names":["React","useState","useEffect","getArray","useForm","Chiropractors","chiropractorDetails","setchiropractorDetails","handleSubmit","register","errors","onSubmit","data","console","log","makeArrayRequest","map","x","chiropractorId","firstName","emailAddress","phoneNumber","timeCreated","required","pattern","value","message","validate","lastname"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAAwD,OAAxD;AACA,SAASC,QAAT,QAAoC,eAApC;AAEA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAgBxB,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDN,QAAQ,CAAQ,EAAR,CAA9D;AACA,QAAM;AAAEO,IAAAA,YAAF;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA;AAA1B,MAAqCN,OAAO,EAAlD;;AACA,QAAMO,QAAQ,GAAIC,IAAD,IAA0B;AACvCC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;AACH,GAFD;;AAKAV,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,gBAAgB,GAAG,YAAY;AACjCR,MAAAA,sBAAsB,CAAC,MAAMJ,QAAQ,EAAf,CAAtB;AACH,KAFD;;AAGAY,IAAAA,gBAAgB;AACnB,GALQ,EAKN,EALM,CAAT;AAOA;;;;;;;;;AAaI,sBACI,0CACKT,mBAAmB,CAACU,GAApB,CAAwBC,CAAC,iBAAI;AAAI,IAAA,GAAG,EAAEA,CAAC,CAACC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA6BD,CAAC,CAACE,SAA/B,OAA2CF,CAAC,CAACE,SAA7C,OAAyDF,CAAC,CAACG,YAA3D,OAA0EH,CAAC,CAACI,WAA5E,OAA0FJ,CAAC,CAACK,WAA5F,CAA7B,CADL,eAGI;AAAM,IAAA,QAAQ,EAAEd,YAAY,CAACG,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,WADT;AAEI,IAAA,GAAG,EAAEF,QAAQ,CAAC;AACVc,MAAAA,QAAQ,EAAE,UADA;AAEVC,MAAAA,OAAO,EAAE;AACLC,QAAAA,KAAK,EAAE,0CADF;AAELC,QAAAA,OAAO,EAAE;AAFJ;AAFC,KAAD,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAWKhB,MAAM,CAACS,SAAP,IAAoBT,MAAM,CAACS,SAAP,CAAiBO,OAX1C,eAaI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,GAAG,EAAEjB,QAAQ,CAAC;AACVkB,MAAAA,QAAQ,EAAEF,KAAK,IAAIA,KAAK,KAAK,OAAV,IAAqB;AAD9B,KAAD,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,EAmBKf,MAAM,CAACkB,QAAP,IAAmBlB,MAAM,CAACkB,QAAP,CAAgBF,OAnBxC,eAqBI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBJ,CAHJ,CADJ;AA6BP,CAxED;;AA4EI,eAAerB,aAAf","sourcesContent":["import React, { useState, useEffect, ChangeEvent } from 'react';\r\nimport { getArray, postArray } from '../../api/api';\r\n\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst Chiropractors = () => {\r\n\r\n    interface IChiropractors {\r\n        chiropractorId: number;\r\n        firstName: string;\r\n        lastname: string;\r\n        emailAddress: string;\r\n        phoneNumber: number;\r\n        timeCreated: Date;\r\n\r\n        postData: string;\r\n        data: any;\r\n        values: any;\r\n        errors: any;\r\n    }\r\n\r\n    const [chiropractorDetails, setchiropractorDetails] = useState<any[]>([]);\r\n    const { handleSubmit, register, errors } = useForm<IChiropractors>();\r\n    const onSubmit = (data: IChiropractors) => {\r\n        console.log(\"data\", data);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const makeArrayRequest = async () => {\r\n            setchiropractorDetails(await getArray());\r\n        }\r\n        makeArrayRequest();\r\n    }, [])\r\n\r\n    /*const [PostDetails, setPostDetails] = useState('');\r\n    const handlePostDetailsChange = (x: any | null) => {\r\n        setPostDetails(x);\r\n    }\r\n    const [HasFocus, setHasFocus] = useState<boolean>(false);\r\n\r\n    const handleSubmit = () => {\r\n        console.log(PostDetails);\r\n    }*/\r\n\r\n    \r\n\r\n\r\n        return (\r\n            <>\r\n                {chiropractorDetails.map(x => <li key={x.chiropractorId}> {x.firstName} {x.firstName} {x.emailAddress} {x.phoneNumber} {x.timeCreated}</li>)}\r\n\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <input\r\n                        name=\"firstName\"\r\n                        ref={register({\r\n                            required: \"Required\",\r\n                            pattern: {\r\n                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                                message: \"invalid email address\"\r\n                            }\r\n                        })}\r\n                    />\r\n                    {errors.firstName && errors.firstName.message}\r\n\r\n                    <input\r\n                        name=\"lastName\"\r\n                        ref={register({\r\n                            validate: value => value !== \"admin\" || \"Nice try!\"\r\n                        })}\r\n                    />\r\n                    {errors.lastname && errors.lastname.message}\r\n\r\n                    <button type=\"submit\">Submit</button>\r\n                </form>\r\n            </>\r\n        )\r\n}\r\n\r\n\r\n\r\n    export default Chiropractors;"]},"metadata":{},"sourceType":"module"}