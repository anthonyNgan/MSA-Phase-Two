{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antho\\\\source\\\\repos\\\\chiropractordashboard\\\\chiropractordashboard\\\\View\\\\app\\\\src\\\\components\\\\Chiropractors\\\\Chiropractors.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { getArray } from '../../api/api';\nimport { useForm } from \"react-hook-form\";\nexport const Chiropractors = () => {\n  const [chiropractorDetails, setchiropractorDetails] = useState([]);\n  const {\n    handleSubmit,\n    register,\n    errors\n  } = useForm();\n  useEffect(() => {\n    const makeArrayRequest = async () => {\n      setchiropractorDetails(await getArray());\n    };\n\n    makeArrayRequest();\n\n    const onSubmit = async data => {\n      const response = fetch(\"https://localhost:44361/api/chiropractors/\", {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n          Accept: \"application/json\",\n          ContentType: \"application/json\"\n        }\n      });\n      return (await response).json().then(data => {\n        console.log('Success:', data);\n      }).catch(error => {\n        console.log('Error:', error);\n      });\n    };\n  }, []);\n  /*const [PostDetails, setPostDetails] = useState('');\r\n  const handlePostDetailsChange = (x: any | null) => {\r\n      setPostDetails(x);\r\n  }\r\n  const [HasFocus, setHasFocus] = useState<boolean>(false);\r\n    const handleSubmit = () => {\r\n      console.log(PostDetails);\r\n  }*/\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, chiropractorDetails.map(x => /*#__PURE__*/React.createElement(\"li\", {\n    key: x.chiropractorId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 47\n    }\n  }, \" \", x.firstName, \" \", x.firstName, \" \", x.emailAddress, \" \", x.phoneNumber, \" \", x.timeCreated)), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"firstName\",\n    ref: register({\n      required: \"Required\",\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n        message: \"invalid Name\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }), errors.firstName && errors.firstName.message, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"lastName\",\n    ref: register({\n      validate: value => value !== \"admin\" || \"Nice try!\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }), errors.lastname && errors.lastname.message, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"Submit\")));\n};\nexport default Chiropractors;","map":{"version":3,"sources":["C:/Users/antho/source/repos/chiropractordashboard/chiropractordashboard/View/app/src/components/Chiropractors/Chiropractors.tsx"],"names":["React","useState","useEffect","getArray","useForm","Chiropractors","chiropractorDetails","setchiropractorDetails","handleSubmit","register","errors","makeArrayRequest","onSubmit","data","response","fetch","method","body","JSON","stringify","headers","Accept","ContentType","json","then","console","log","catch","error","map","x","chiropractorId","firstName","emailAddress","phoneNumber","timeCreated","required","pattern","value","message","validate","lastname"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAAwD,OAAxD;AACA,SAASC,QAAT,QAAoC,eAApC;AAEA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAgB/B,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDN,QAAQ,CAAQ,EAAR,CAA9D;AACA,QAAM;AAAEO,IAAAA,YAAF;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA;AAA1B,MAAqCN,OAAO,EAAlD;AAIAF,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,gBAAgB,GAAG,YAAY;AACjCJ,MAAAA,sBAAsB,CAAC,MAAMJ,QAAQ,EAAf,CAAtB;AACH,KAFD;;AAGAQ,IAAAA,gBAAgB;;AAChB,UAAMC,QAAQ,GAAG,MAAOC,IAAP,IAAgC;AAC7C,YAAMC,QAAQ,GAAGC,KAAK,CAAC,4CAAD,EAA+C;AACjEC,QAAAA,MAAM,EAAE,MADyD;AAEjEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAF2D;AAGjEO,QAAAA,OAAO,EAAE;AACLC,UAAAA,MAAM,EAAE,kBADH;AAELC,UAAAA,WAAW,EAAE;AAFR;AAHwD,OAA/C,CAAtB;AAQA,aAAO,CAAC,MAAMR,QAAP,EAAiBS,IAAjB,GACFC,IADE,CACGX,IAAI,IAAI;AACVY,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBb,IAAxB;AACH,OAHE,EAIFc,KAJE,CAIKC,KAAD,IAAW;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBE,KAAtB;AACH,OANE,CAAP;AAOH,KAhBD;AAiBH,GAtBQ,EAsBN,EAtBM,CAAT;AAwBA;;;;;;;;;AAaI,sBACI,0CACKtB,mBAAmB,CAACuB,GAApB,CAAwBC,CAAC,iBAAI;AAAI,IAAA,GAAG,EAAEA,CAAC,CAACC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA6BD,CAAC,CAACE,SAA/B,OAA2CF,CAAC,CAACE,SAA7C,OAAyDF,CAAC,CAACG,YAA3D,OAA0EH,CAAC,CAACI,WAA5E,OAA0FJ,CAAC,CAACK,WAA5F,CAA7B,CADL,eAGI;AAAM,IAAA,QAAQ,EAAE3B,YAAY,CAACI,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,WADT;AAEI,IAAA,GAAG,EAAEH,QAAQ,CAAC;AACV2B,MAAAA,QAAQ,EAAE,UADA;AAEVC,MAAAA,OAAO,EAAE;AACLC,QAAAA,KAAK,EAAE,0CADF;AAELC,QAAAA,OAAO,EAAE;AAFJ;AAFC,KAAD,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAWK7B,MAAM,CAACsB,SAAP,IAAoBtB,MAAM,CAACsB,SAAP,CAAiBO,OAX1C,eAaI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,GAAG,EAAE9B,QAAQ,CAAC;AACV+B,MAAAA,QAAQ,EAAEF,KAAK,IAAIA,KAAK,KAAK,OAAV,IAAqB;AAD9B,KAAD,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,EAmBK5B,MAAM,CAAC+B,QAAP,IAAmB/B,MAAM,CAAC+B,QAAP,CAAgBF,OAnBxC,eAqBI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBJ,CAHJ,CADJ;AA6BP,CAvFM;AAwFH,eAAelC,aAAf","sourcesContent":["import React, { useState, useEffect, ChangeEvent } from 'react';\r\nimport { getArray, postArray } from '../../api/api';\r\n\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport const Chiropractors = () => {\r\n\r\n    interface IChiropractors {\r\n        chiropractorId: number;\r\n        firstName: string;\r\n        lastname: string;\r\n        emailAddress: string;\r\n        phoneNumber: number;\r\n        timeCreated: Date;\r\n\r\n        postData: string;\r\n        data: any;\r\n        values: any;\r\n        errors: any;\r\n    }\r\n\r\n    const [chiropractorDetails, setchiropractorDetails] = useState<any[]>([]);\r\n    const { handleSubmit, register, errors } = useForm<IChiropractors>();\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n        const makeArrayRequest = async () => {\r\n            setchiropractorDetails(await getArray());\r\n        }\r\n        makeArrayRequest();\r\n        const onSubmit = async (data: IChiropractors) => {\r\n            const response = fetch(\"https://localhost:44361/api/chiropractors/\", {\r\n                method: 'POST',\r\n                body: JSON.stringify(data),\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    ContentType: \"application/json\"\r\n                },\r\n            })\r\n            return (await response).json()\r\n                .then(data => {\r\n                    console.log('Success:', data);\r\n                })\r\n                .catch((error) => {\r\n                    console.log('Error:', error);\r\n                })\r\n        }\r\n    }, [])\r\n\r\n    /*const [PostDetails, setPostDetails] = useState('');\r\n    const handlePostDetailsChange = (x: any | null) => {\r\n        setPostDetails(x);\r\n    }\r\n    const [HasFocus, setHasFocus] = useState<boolean>(false);\r\n\r\n    const handleSubmit = () => {\r\n        console.log(PostDetails);\r\n    }*/\r\n\r\n    \r\n\r\n\r\n        return (\r\n            <>\r\n                {chiropractorDetails.map(x => <li key={x.chiropractorId}> {x.firstName} {x.firstName} {x.emailAddress} {x.phoneNumber} {x.timeCreated}</li>)}\r\n\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <input\r\n                        name=\"firstName\"\r\n                        ref={register({\r\n                            required: \"Required\",\r\n                            pattern: {\r\n                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                                message: \"invalid Name\"\r\n                            }\r\n                        })}\r\n                    />\r\n                    {errors.firstName && errors.firstName.message}\r\n\r\n                    <input\r\n                        name=\"lastName\"\r\n                        ref={register({\r\n                            validate: value => value !== \"admin\" || \"Nice try!\"\r\n                        })}\r\n                    />\r\n                    {errors.lastname && errors.lastname.message}\r\n\r\n                    <button type=\"submit\">Submit</button>\r\n                </form>\r\n            </>\r\n        )\r\n}\r\n    export default Chiropractors;"]},"metadata":{},"sourceType":"module"}