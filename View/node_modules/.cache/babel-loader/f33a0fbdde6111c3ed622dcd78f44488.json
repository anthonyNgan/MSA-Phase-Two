{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\antho\\\\source\\\\repos\\\\MSA-Phase-Two\\\\View\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\antho\\\\source\\\\repos\\\\MSA-Phase-Two\\\\View\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"C:\\\\Users\\\\antho\\\\source\\\\repos\\\\MSA-Phase-Two\\\\View\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\antho\\\\source\\\\repos\\\\MSA-Phase-Two\\\\View\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\antho\\\\source\\\\repos\\\\MSA-Phase-Two\\\\View\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,forwardRef}from'react';import{getArray,postArray,editArray,deleteArray}from'../../api/api';import{useForm}from'react-hook-form';import{Button,TextField}from\"@material-ui/core/\";import MaterialTable from\"material-table\";import ChevronLeft from'@material-ui/icons/ChevronLeft';import ChevronRight from'@material-ui/icons/ChevronRight';import Search from'@material-ui/icons/Search';import Clear from'@material-ui/icons/Clear';import DeleteOutline from'@material-ui/icons/DeleteOutline';import Edit from'@material-ui/icons/Edit';import FirstPage from'@material-ui/icons/FirstPage';import LastPage from'@material-ui/icons/LastPage';export var Chiropractors=function Chiropractors(){var tableIcons={Search:forwardRef(function(props,ref){return/*#__PURE__*/React.createElement(Search,Object.assign({},props,{ref:ref}));}),Delete:forwardRef(function(props,ref){return/*#__PURE__*/React.createElement(DeleteOutline,Object.assign({},props,{ref:ref}));}),Edit:forwardRef(function(props,ref){return/*#__PURE__*/React.createElement(Edit,Object.assign({},props,{ref:ref}));}),Clear:forwardRef(function(props,ref){return/*#__PURE__*/React.createElement(Clear,Object.assign({},props,{ref:ref}));}),FirstPage:forwardRef(function(props,ref){return/*#__PURE__*/React.createElement(FirstPage,Object.assign({},props,{ref:ref}));}),LastPage:forwardRef(function(props,ref){return/*#__PURE__*/React.createElement(LastPage,Object.assign({},props,{ref:ref}));}),NextPage:forwardRef(function(props,ref){return/*#__PURE__*/React.createElement(ChevronRight,Object.assign({},props,{ref:ref}));}),PreviousPage:forwardRef(function(props,ref){return/*#__PURE__*/React.createElement(ChevronLeft,Object.assign({},props,{ref:ref}));}),ResetSearch:forwardRef(function(props,ref){return/*#__PURE__*/React.createElement(Clear,Object.assign({},props,{ref:ref}));})};var _useState=useState([]),_useState2=_slicedToArray(_useState,2),chiropractorDetails=_useState2[0],setchiropractorDetails=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),formData=_useState4[0],setFormData=_useState4[1];var _useForm=useForm(),handleSubmit=_useForm.handleSubmit,errors=_useForm.errors;var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isLoading=_useState6[0],setIsLoading=_useState6[1];var columns=[{title:\"First Name\",field:\"firstName\"},{title:\"Last Name\",field:\"lastName\"},{title:\"Email Address\",field:\"emailAddress\"},{title:\"Phone Number\",field:\"phoneNumber\",type:\"numeric\"}];var handleChange=function handleChange(e){setFormData(_objectSpread(_objectSpread({},formData),{},_defineProperty({},e.target.name,e.target.value)));console.log(formData);};var onSubmit=function onSubmit(data){console.log(\"Submit: \",formData);postArray(formData);};var deletePost=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return deleteArray(id);case 2:case\"end\":return _context.stop();}}},_callee);}));return function deletePost(_x){return _ref.apply(this,arguments);};}();var editPost=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.log(id);_context2.next=3;return editArray(id);case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function editPost(_x2){return _ref2.apply(this,arguments);};}();useEffect(function(){setIsLoading(true);var makeArrayRequest=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.t0=setchiropractorDetails;_context3.next=3;return getArray();case 3:_context3.t1=_context3.sent;(0,_context3.t0)(_context3.t1);case 5:case\"end\":return _context3.stop();}}},_callee3);}));return function makeArrayRequest(){return _ref3.apply(this,arguments);};}();makeArrayRequest();setIsLoading(false);},[handleChange,deletePost,editPost]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h3\",null,\"Add new Chiropractor\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit(onSubmit)},/*#__PURE__*/React.createElement(\"label\",null,\"Id: \"),/*#__PURE__*/React.createElement(TextField,{type:\"text\",id:\"id\",name:\"ID\"}),/*#__PURE__*/React.createElement(\"label\",null,\"First Name: \"),/*#__PURE__*/React.createElement(TextField,{type:\"text\",id:\"firstName\",name:\"firstName\",onChange:handleChange}),/*#__PURE__*/React.createElement(\"label\",null,\"Last Name: \"),/*#__PURE__*/React.createElement(TextField,{type:\"text\",id:\"lastName\",name:\"lastName\",onChange:handleChange}),/*#__PURE__*/React.createElement(\"label\",null,\"Email Address: \"),/*#__PURE__*/React.createElement(TextField,{type:\"text\",id:\"emailAddress\",name:\"emailAddress\",onChange:handleChange}),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",type:\"submit\",value:\"Submit\"},\"Add New\"),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"default\",onClick:function onClick(e){return editPost(e);}},\"Update\")),/*#__PURE__*/React.createElement(MaterialTable,{title:\"List of Chiropractors\",icons:tableIcons,columns:columns,data:chiropractorDetails,actions:[{icon:function icon(){return/*#__PURE__*/React.createElement(Edit,null);},tooltip:'Edit User',onClick:function onClick(event,rowData){// Do save operation\neditPost(44);}},{icon:function icon(){return/*#__PURE__*/React.createElement(DeleteOutline,null);},tooltip:'delete User',onClick:function onClick(event,rowData){// Do save operation\ndeletePost(rowData.chiropractorId);console.log(rowData.chiropractorId);}}],options:{sorting:true,actionsColumnIndex:-1},isLoading:isLoading}));};export default Chiropractors;","map":{"version":3,"sources":["C:/Users/antho/source/repos/MSA-Phase-Two/view/src/components/Chiropractors/Chiropractors.tsx"],"names":["React","useState","useEffect","forwardRef","getArray","postArray","editArray","deleteArray","useForm","Button","TextField","MaterialTable","ChevronLeft","ChevronRight","Search","Clear","DeleteOutline","Edit","FirstPage","LastPage","Chiropractors","tableIcons","props","ref","Delete","NextPage","PreviousPage","ResetSearch","chiropractorDetails","setchiropractorDetails","formData","setFormData","handleSubmit","errors","isLoading","setIsLoading","columns","title","field","type","handleChange","e","target","name","value","console","log","onSubmit","data","deletePost","id","editPost","makeArrayRequest","icon","tooltip","onClick","event","rowData","chiropractorId","sorting","actionsColumnIndex"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, forwardRef } from 'react';\r\nimport { IChiropractors } from '../../common/Interface';\r\n\r\nimport { getArray, postArray, editArray, deleteArray } from '../../api/api';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nimport { Button, TextField } from \"@material-ui/core/\";\r\n\r\nimport MaterialTable, { Column } from \"material-table\";\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Search from '@material-ui/icons/Search';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\n\r\nexport const Chiropractors = () => {\r\n\r\n    const tableIcons = {\r\n        Search: forwardRef((props, ref: React.Ref<SVGSVGElement>) => <Search {...props} ref={ref} />),\r\n        Delete: forwardRef((props, ref: React.Ref<SVGSVGElement>) => <DeleteOutline {...props} ref={ref} />),\r\n        Edit: forwardRef((props, ref: React.Ref<SVGSVGElement>) => <Edit {...props} ref={ref} />),\r\n        Clear: forwardRef((props, ref: React.Ref<SVGSVGElement>) => <Clear {...props} ref={ref} />),\r\n        FirstPage: forwardRef((props, ref: React.Ref<SVGSVGElement>) => <FirstPage {...props} ref={ref} />),\r\n        LastPage: forwardRef((props, ref: React.Ref<SVGSVGElement>) => <LastPage {...props} ref={ref} />),\r\n        NextPage: forwardRef((props, ref: React.Ref<SVGSVGElement>) => <ChevronRight {...props} ref={ref} />),\r\n        PreviousPage: forwardRef((props, ref: React.Ref<SVGSVGElement>) => <ChevronLeft {...props} ref={ref} />),\r\n        ResetSearch: forwardRef((props, ref: React.Ref<SVGSVGElement>) => <Clear {...props} ref={ref} />)\r\n    }\r\n\r\n    const [chiropractorDetails, setchiropractorDetails] = useState<any[]>([]);\r\n    const [formData, setFormData] = useState<any[]>([]);\r\n    const { handleSubmit, errors } = useForm<IChiropractors>();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    type RowData = {}\r\n\r\n    const columns = [\r\n        { title: \"First Name\", field: \"firstName\" },\r\n        { title: \"Last Name\", field: \"lastName\" },\r\n        { title: \"Email Address\", field: \"emailAddress\" },\r\n        { title: \"Phone Number\", field: \"phoneNumber\", type: \"numeric\" },\r\n    ] as Column<RowData>[]\r\n\r\n\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value })\r\n        console.log(formData)\r\n    }\r\n\r\n    const onSubmit = (data: IChiropractors | {}) => {\r\n        console.log(\"Submit: \", formData);\r\n        postArray(formData)\r\n    }\r\n\r\n    const deletePost = async (id: any) => {\r\n        await deleteArray(id)\r\n    };\r\n\r\n    const editPost = async (id: any | {}) => {\r\n        console.log(id);\r\n        await editArray(id)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        const makeArrayRequest = async () => {\r\n            setchiropractorDetails(await getArray());\r\n        }\r\n        makeArrayRequest();\r\n        setIsLoading(false);\r\n    }, [handleChange, deletePost, editPost])\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>Add new Chiropractor</h3>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <label>Id: </label>\r\n                <TextField\r\n                    type=\"text\"\r\n                    id=\"id\"\r\n                    name=\"ID\"\r\n                />\r\n                <label>First Name: </label>\r\n                <TextField\r\n                    type=\"text\"\r\n                    id=\"firstName\"\r\n                    name=\"firstName\"\r\n                    onChange={handleChange}\r\n\r\n                />\r\n                <label>Last Name: </label>\r\n                <TextField\r\n                    type=\"text\"\r\n                    id=\"lastName\"\r\n                    name=\"lastName\"\r\n                    onChange={handleChange}\r\n                />\r\n                <label>Email Address: </label>\r\n                <TextField\r\n                    type=\"text\"\r\n                    id=\"emailAddress\"\r\n                    name=\"emailAddress\"\r\n                    onChange={handleChange}\r\n                />\r\n                {/* <label>Phone Number: </label>\r\n                <TextField\r\n                    type=\"number\"\r\n                    id=\"phoneNumber\"\r\n                    name=\"phoneNumber\"\r\n                    onChange={handleChange}\r\n                /> */}\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\" value=\"Submit\">Add New</Button>\r\n                <Button variant=\"contained\" color=\"default\" onClick={(e) => editPost(e)}>Update</Button>\r\n\r\n            </form>\r\n\r\n            <MaterialTable\r\n                title=\"List of Chiropractors\"\r\n                icons={tableIcons}\r\n                columns={columns}\r\n                data={chiropractorDetails}\r\n                actions={[\r\n                    {\r\n                        icon: () => <Edit />,\r\n                        tooltip: 'Edit User',\r\n                        onClick: (event, rowData) => {\r\n                            // Do save operation\r\n                            editPost(44)\r\n                        }\r\n                    },\r\n                    {\r\n                        icon: () => <DeleteOutline />,\r\n                        tooltip: 'delete User',\r\n                        onClick: (event, rowData) => {\r\n                            // Do save operation\r\n                            deletePost(rowData.chiropractorId)\r\n                            console.log(rowData.chiropractorId)\r\n                        }\r\n                    }\r\n                ]}\r\n                options={{\r\n                    sorting: true,\r\n                    actionsColumnIndex: -1,\r\n                }}\r\n                isLoading={isLoading}\r\n            />\r\n\r\n            {/* {chiropractorDetails.map(\r\n                x => <li key={x.chiropractorId}> {x.firstName} {x.lastName} {x.emailAddress} {x.phoneNumber} {x.timeCreated}                 \r\n                <Button variant=\"contained\" color=\"secondary\" onClick={() => deletePost(x.chiropractorId)}> Delete</Button>\r\n                \r\n                </li>\r\n                \r\n            )} */}\r\n        </>\r\n    )\r\n}\r\nexport default Chiropractors;"]},"metadata":{},"sourceType":"module"}