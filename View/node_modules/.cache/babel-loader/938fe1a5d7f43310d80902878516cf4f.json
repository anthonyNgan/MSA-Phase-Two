{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\antho\\\\source\\\\repos\\\\MSA-Phase-Two\\\\View\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\antho\\\\source\\\\repos\\\\MSA-Phase-Two\\\\View\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"C:\\\\Users\\\\antho\\\\source\\\\repos\\\\MSA-Phase-Two\\\\View\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\antho\\\\source\\\\repos\\\\MSA-Phase-Two\\\\View\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\antho\\\\source\\\\repos\\\\MSA-Phase-Two\\\\View\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{getArray,postArray,deleteArray}from'../../api/api';import{useForm}from\"react-hook-form\";import{makeStyles}from'@material-ui/core/styles';import{Button,TextField}from\"@material-ui/core/\";export var Chiropractors=function Chiropractors(){var useStyles=makeStyles({root:{background:'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',border:0,borderRadius:3,boxShadow:'0 3px 5px 2px rgba(255, 105, 135, .3)',color:'white',height:48,padding:'0 30px'}});var _useState=useState([]),_useState2=_slicedToArray(_useState,2),chiropractorDetails=_useState2[0],setchiropractorDetails=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),formData=_useState4[0],setFormData=_useState4[1];var _useForm=useForm(),handleSubmit=_useForm.handleSubmit,errors=_useForm.errors;var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),list=_useState6[0],updateList=_useState6[1];var handleChange=function handleChange(e){setFormData(_objectSpread(_objectSpread({},formData),{},_defineProperty({},e.target.name,e.target.value)));console.log(formData);};var onSubmit=function onSubmit(data){console.log(\"Submit: \",formData);postArray(formData);};/*\r\n        const handleDelete = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n            setFormData({ ...formData, [e.target.id]: e.target.value })\r\n            console.log(\"id:\", formData);\r\n    \r\n        }\r\n    */ /*    const handleDelete = (id: number, e: React.ChangeEvent<Ht) => {\r\n        setDeleteArray({ ...formData, [e.target.name]: e.target.value })\r\n        const newList = list.filter((data) => data.id !== id);\r\n        updateList(newList);\r\n        console.log(newList)\r\n    }*/var handleRemoveItem=function handleRemoveItem(data){deleteArray(formData);updateList(function(list){return list.filter(function(data){return data.id!==data.id;});});console.log('data',formData);};useEffect(function(){var makeArrayRequest=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=setchiropractorDetails;_context.next=3;return getArray();case 3:_context.t1=_context.sent;(0,_context.t0)(_context.t1);case 5:case\"end\":return _context.stop();}}},_callee);}));return function makeArrayRequest(){return _ref.apply(this,arguments);};}();makeArrayRequest();},[]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h3\",null,\"List of Chiropractors\"),chiropractorDetails.map(function(x){return/*#__PURE__*/React.createElement(\"li\",{key:x.chiropractorId},\" \",x.firstName,\" \",x.lastName,\" \",x.emailAddress,\" \",x.phoneNumber,\" \",x.timeCreated);}),/*#__PURE__*/React.createElement(\"h3\",null,\"Add new Chiropractor\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit(onSubmit)},/*#__PURE__*/React.createElement(\"label\",null,\"First Name: \"),/*#__PURE__*/React.createElement(TextField,{type:\"text\",id:\"firstName\",name:\"firstName\",onChange:handleChange}),errors.firstName&&errors.firstName.message,/*#__PURE__*/React.createElement(\"label\",null,\"Last Name: \"),/*#__PURE__*/React.createElement(TextField,{type:\"text\",id:\"lastName\",name:\"lastName\",onChange:handleChange}),errors.lastname&&errors.lastname.message,/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",type:\"submit\",value:\"Submit\"},\"Submit\"),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"default\",onClick:function onClick(){return console.log(deleteArray);}},\" Update\"),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"secondary\",onClick:function onClick(){return handleRemoveItem(list);}},\" Delete\")));};export default Chiropractors;","map":{"version":3,"sources":["C:/Users/antho/source/repos/MSA-Phase-Two/View/src/components/Chiropractors/Chiropractors.tsx"],"names":["React","useState","useEffect","getArray","postArray","deleteArray","useForm","makeStyles","Button","TextField","Chiropractors","useStyles","root","background","border","borderRadius","boxShadow","color","height","padding","chiropractorDetails","setchiropractorDetails","formData","setFormData","handleSubmit","errors","list","updateList","handleChange","e","target","name","value","console","log","onSubmit","data","handleRemoveItem","filter","id","makeArrayRequest","map","x","chiropractorId","firstName","lastName","emailAddress","phoneNumber","timeCreated","message","lastname"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, ChangeEvent } from 'react';\r\nimport { IChiropractors } from '../../common/Interface';\r\n\r\nimport { getArray, postArray, deleteArray } from '../../api/api';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, TextField } from \"@material-ui/core/\";\r\n\r\nexport const Chiropractors = () => {\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n            border: 0,\r\n            borderRadius: 3,\r\n            boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n            color: 'white',\r\n            height: 48,\r\n            padding: '0 30px',\r\n        },\r\n    });\r\n\r\n    const [chiropractorDetails, setchiropractorDetails] = useState<any[]>([]);\r\n    const [formData, setFormData] = useState<any[]>([]);\r\n    const { handleSubmit, errors } = useForm<IChiropractors>();\r\n    const [list, updateList] = useState<any[]>([]);\r\n\r\n\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value })\r\n        console.log(formData)\r\n    }\r\n\r\n    const onSubmit = (data: IChiropractors | {}) => {\r\n        console.log(\"Submit: \", formData);\r\n        postArray(formData)\r\n    }\r\n    /*\r\n        const handleDelete = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n            setFormData({ ...formData, [e.target.id]: e.target.value })\r\n            console.log(\"id:\", formData);\r\n    \r\n        }\r\n    */\r\n    /*    const handleDelete = (id: number, e: React.ChangeEvent<Ht) => {\r\n        setDeleteArray({ ...formData, [e.target.name]: e.target.value })\r\n        const newList = list.filter((data) => data.id !== id);\r\n        updateList(newList);\r\n        console.log(newList)\r\n    }*/\r\n\r\n    const handleRemoveItem = (data: IChiropractors | {}) => {\r\n        deleteArray(formData);\r\n        updateList(list => list.filter(data => data.id !== data.id));\r\n        console.log('data', formData)\r\n    };\r\n\r\n    useEffect(() => {\r\n        const makeArrayRequest = async () => {\r\n            setchiropractorDetails(await getArray());\r\n        }\r\n        makeArrayRequest();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <h3>List of Chiropractors</h3>\r\n            {chiropractorDetails.map(x => <li key={x.chiropractorId}> {x.firstName} {x.lastName} {x.emailAddress} {x.phoneNumber} {x.timeCreated}</li>)}\r\n\r\n            <h3>Add new Chiropractor</h3>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <label>First Name: </label>\r\n                <TextField\r\n                    type=\"text\"\r\n                    id=\"firstName\"\r\n                    name=\"firstName\"\r\n                    onChange={handleChange}\r\n\r\n                />\r\n\r\n                {errors.firstName && errors.firstName.message}\r\n                <label>Last Name: </label>\r\n                <TextField\r\n                    type=\"text\"\r\n                    id=\"lastName\"\r\n                    name=\"lastName\"\r\n                    onChange={handleChange}\r\n                />\r\n                {errors.lastname && errors.lastname.message}\r\n\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\" value=\"Submit\">Submit</Button>\r\n                <Button variant=\"contained\" color=\"default\" onClick={() => console.log(deleteArray)}> Update</Button>\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={() => handleRemoveItem(list)}> Delete</Button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\nexport default Chiropractors;"]},"metadata":{},"sourceType":"module"}