{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\antho\\\\source\\\\repos\\\\MSA-Phase-Two\\\\View\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{makeStyles}from'@material-ui/core/styles';import{Card,CardContent,CardActions,Grid}from'@material-ui/core';import FullCalendar from'@fullcalendar/react';import dayGridPlugin from'@fullcalendar/daygrid';import interactionPlugin from'@fullcalendar/interaction';import{useAuth0}from\"@auth0/auth0-react\";var useStyles=makeStyles({root:{minWidth:275}});var Dashboard=function Dashboard(){var classes=useStyles();var _useAuth=useAuth0(),user=_useAuth.user;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),events=_useState4[0],setEvents=_useState4[1];var Calendar={calendarEvents:[{title:\"Today Event\",start:new Date()}]};/* useEffect(() => {\r\n        const getCalendarRequest = async () => {\r\n            setData(calendarEvents());\r\n        }\r\n        getCalendarRequest();\r\n    }, []);*/var handleEventClick=function handleEventClick(clickInfo){console.log(\"hello world\");clickInfo.event.remove();};var handleDateSelect=function handleDateSelect(selectInfo){var title=prompt('Please enter your new booking');var calendarAPI=selectInfo.view.calendar;calendarAPI.unselect();if(title){calendarAPI.addEvent({title:title,start:selectInfo.startStr,end:selectInfo.endStr,allDay:selectInfo.allDay});}setEvents(events);};useEffect(function(){events;},[]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card,{className:classes.root},/*#__PURE__*/React.createElement(CardContent,null,/*#__PURE__*/React.createElement(Grid,null,\"Hello \",user.nickname,\"!\"),/*#__PURE__*/React.createElement(CardActions,null,\"What do you have on today?\",/*#__PURE__*/React.createElement(\"br\",null),\"Click on calendar to create schedule events.\"))),/*#__PURE__*/React.createElement(FullCalendar,{plugins:[dayGridPlugin,interactionPlugin],initialView:\"dayGridMonth\",editable:true,selectable:true,select:handleDateSelect,eventClick:handleEventClick,events:Calendar.calendarEvents}));};export default Dashboard;","map":{"version":3,"sources":["C:/Users/antho/source/repos/MSA-Phase-Two/view/src/components/Dashboard/Dashboard.tsx"],"names":["React","useState","useEffect","makeStyles","Card","CardContent","CardActions","Grid","FullCalendar","dayGridPlugin","interactionPlugin","useAuth0","useStyles","root","minWidth","Dashboard","classes","user","data","setData","events","setEvents","Calendar","calendarEvents","title","start","Date","handleEventClick","clickInfo","console","log","event","remove","handleDateSelect","selectInfo","prompt","calendarAPI","view","calendar","unselect","addEvent","startStr","end","endStr","allDay","nickname"],"mappings":"gLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA0C,OAA1C,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,OAAQC,IAAR,CAAcC,WAAd,CAA2BC,WAA3B,CAAwCC,IAAxC,KAAoD,mBAApD,CACA,MAAOC,CAAAA,YAAP,KAAyD,qBAAzD,CACA,MAAOC,CAAAA,aAAP,KAA0B,uBAA1B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,2BAA9B,CAIA,OAASC,QAAT,KAAyB,oBAAzB,CAEA,GAAMC,CAAAA,SAAS,CAAGT,UAAU,CAAC,CACzBU,IAAI,CAAE,CACFC,QAAQ,CAAE,GADR,CADmB,CAAD,CAA5B,CAMA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACpB,GAAMC,CAAAA,OAAO,CAAGJ,SAAS,EAAzB,CADoB,aAELD,QAAQ,EAFH,CAEbM,IAFa,UAEbA,IAFa,eAGIhB,QAAQ,CAAQ,EAAR,CAHZ,wCAGbiB,IAHa,eAGPC,OAHO,8BAIQlB,QAAQ,CAAQ,EAAR,CAJhB,yCAIbmB,MAJa,eAILC,SAJK,eAMpB,GAAMC,CAAAA,QAAQ,CAAG,CACbC,cAAc,CAAE,CACZ,CAACC,KAAK,CAAE,aAAR,CAAuBC,KAAK,CAAE,GAAIC,CAAAA,IAAJ,EAA9B,CADY,CADH,CAAjB,CAMD;AACH;AACA;AACA;AACA;AACA,aAEI,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,SAAD,CAA8B,CACjDC,OAAO,CAACC,GAAR,CAAY,aAAZ,EACAF,SAAS,CAACG,KAAV,CAAgBC,MAAhB,GACH,CAHH,CAKA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,UAAD,CAA+B,CACpD,GAAIV,CAAAA,KAAK,CAAGW,MAAM,CAAC,+BAAD,CAAlB,CACA,GAAIC,CAAAA,WAAW,CAAGF,UAAU,CAACG,IAAX,CAAgBC,QAAlC,CAEAF,WAAW,CAACG,QAAZ,GAEA,GAAIf,KAAJ,CAAW,CACPY,WAAW,CAACI,QAAZ,CAAqB,CACjBhB,KAAK,CAALA,KADiB,CAEjBC,KAAK,CAAES,UAAU,CAACO,QAFD,CAGjBC,GAAG,CAAER,UAAU,CAACS,MAHC,CAIjBC,MAAM,CAAEV,UAAU,CAACU,MAJF,CAArB,EAMH,CACDvB,SAAS,CAACD,MAAD,CAAT,CACH,CAfD,CAkBAlB,SAAS,CAAC,UAAM,CACZkB,MAAM,CACT,CAFQ,CAEN,EAFM,CAAT,CAIA,mBACI,qDACI,oBAAC,IAAD,EAAM,SAAS,CAAEJ,OAAO,CAACH,IAAzB,eACI,oBAAC,WAAD,mBACI,oBAAC,IAAD,eACWI,IAAI,CAAC4B,QADhB,KADJ,cAII,oBAAC,WAAD,gDAEI,8BAFJ,gDAJJ,CADJ,CADJ,cAaI,oBAAC,YAAD,EACA,OAAO,CAAE,CAACpC,aAAD,CAAgBC,iBAAhB,CADT,CAEA,WAAW,CAAC,cAFZ,CAGA,QAAQ,CAAE,IAHV,CAIA,UAAU,CAAE,IAJZ,CAKA,MAAM,CAAEuB,gBALR,CAMA,UAAU,CAAEN,gBANZ,CAOA,MAAM,CAAEL,QAAQ,CAACC,cAPjB,EAbJ,CADJ,CA0BH,CAxED,CA0EA,cAAeR,CAAAA,SAAf","sourcesContent":["import React , {useState, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {Card, CardContent, CardActions, Grid } from '@material-ui/core';\r\nimport FullCalendar, {EventClickArg, DateSelectArg} from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\n\r\nimport {calendarEvents} from '../../api/api';\r\n\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n    },\r\n})\r\n\r\nconst Dashboard = () => {\r\n    const classes = useStyles();\r\n    const {user} = useAuth0();\r\n    const [data, setData] = useState<any[]>([]);\r\n    const [events, setEvents] = useState<any[]>([]);\r\n\r\n    const Calendar = {\r\n        calendarEvents: [\r\n            {title: \"Today Event\", start: new Date() }\r\n        ]\r\n    }\r\n\r\n   /* useEffect(() => {\r\n        const getCalendarRequest = async () => {\r\n            setData(calendarEvents());\r\n        }\r\n        getCalendarRequest();\r\n    }, []);*/\r\n\r\n    const handleEventClick = (clickInfo: EventClickArg) => {\r\n          console.log(\"hello world\")\r\n          clickInfo.event.remove();\r\n      }\r\n\r\n    const handleDateSelect = (selectInfo: DateSelectArg) => {\r\n        let title = prompt('Please enter your new booking');\r\n        let calendarAPI = selectInfo.view.calendar\r\n\r\n        calendarAPI.unselect()\r\n\r\n        if (title) {\r\n            calendarAPI.addEvent({\r\n                title,\r\n                start: selectInfo.startStr,\r\n                end: selectInfo.endStr,\r\n                allDay: selectInfo.allDay\r\n            })\r\n        }\r\n        setEvents(events)\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n        events\r\n    }, [])\r\n    \r\n    return (\r\n        <>\r\n            <Card className={classes.root }>\r\n                <CardContent>\r\n                    <Grid>\r\n                        Hello {user.nickname}!\r\n                    </Grid>\r\n                    <CardActions>\r\n                        What do you have on today? \r\n                        <br></br>\r\n                        Click on calendar to create schedule events.\r\n                    </CardActions>\r\n                </CardContent>\r\n            </Card>\r\n            <FullCalendar\r\n            plugins={[dayGridPlugin, interactionPlugin]}\r\n            initialView=\"dayGridMonth\"\r\n            editable={true}\r\n            selectable={true}\r\n            select={handleDateSelect}\r\n            eventClick={handleEventClick}\r\n            events={Calendar.calendarEvents}\r\n            />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}