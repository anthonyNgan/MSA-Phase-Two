{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antho\\\\source\\\\repos\\\\MSA-Phase-Two\\\\view\\\\src\\\\components\\\\Chiropractors\\\\Chiropractors.tsx\";\nimport React, { useState, useEffect, forwardRef } from 'react';\nimport { getArray, postArray, editArray, deleteArray } from '../../api/api';\nimport { useForm } from 'react-hook-form';\nimport { Button, TextField } from \"@material-ui/core/\";\nimport MaterialTable from \"material-table\";\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Search from '@material-ui/icons/Search';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nexport const Chiropractors = () => {\n  const tableIcons = {\n    Search: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Search, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 69\n      }\n    }))),\n    Delete: forwardRef((props, ref) => /*#__PURE__*/React.createElement(DeleteOutline, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 69\n      }\n    }))),\n    Edit: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Edit, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 67\n      }\n    }))),\n    Clear: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 68\n      }\n    }))),\n    FirstPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FirstPage, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 72\n      }\n    }))),\n    LastPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(LastPage, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 71\n      }\n    }))),\n    NextPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 71\n      }\n    }))),\n    PreviousPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronLeft, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 75\n      }\n    }))),\n    ResetSearch: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 74\n      }\n    })))\n  };\n  const [chiropractorDetails, setchiropractorDetails] = useState([]);\n  const [formData, setFormData] = useState([]);\n  const {\n    handleSubmit,\n    errors\n  } = useForm();\n  const [isLoading, setIsLoading] = useState(false); // const [columns, setColumns] = useState<any[]>([\n  //         { title: \"First Name\", field: \"firstName\" },\n  //         { title: \"Last Name\", field: \"lastName\" },\n  //         { title: \"Email Address\", field: \"emailAddress\" },\n  //         { title: \"Phone Number\", field: \"phoneNumber\", type: \"numeric\" },\n  // ])\n\n  const handleChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n    console.log(formData);\n  };\n\n  const onSubmit = data => {\n    console.log(\"Submit: \", formData);\n    postArray(formData);\n  };\n\n  const deletePost = async id => {\n    await deleteArray(id);\n  };\n\n  const editPost = async id => {\n    console.log(id);\n    await editArray(id);\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const makeArrayRequest = async () => {\n      setchiropractorDetails(await getArray());\n    };\n\n    makeArrayRequest();\n    setIsLoading(false);\n  }, [handleChange, deletePost, editPost]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Add new Chiropractor\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \"Id: \"), /*#__PURE__*/React.createElement(TextField, {\n    type: \"text\",\n    id: \"id\",\n    name: \"ID\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, \"First Name: \"), /*#__PURE__*/React.createElement(TextField, {\n    type: \"text\",\n    id: \"firstName\",\n    name: \"firstName\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }), errors.firstName && errors.firstName.message, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, \"Last Name: \"), /*#__PURE__*/React.createElement(TextField, {\n    type: \"text\",\n    id: \"lastName\",\n    name: \"lastName\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"Email Address: \"), /*#__PURE__*/React.createElement(TextField, {\n    type: \"text\",\n    id: \"emailAddress\",\n    name: \"emailAddress\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    value: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, \"Add New\")), /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"List of Chiropractors\",\n    icons: tableIcons,\n    columns: [{\n      title: \"First Name\",\n      field: \"firstName\"\n    }, {\n      title: \"Last Name\",\n      field: \"lastName\"\n    }, {\n      title: \"Email Address\",\n      field: \"emailAddress\",\n      editable: 'onUpdate'\n    }, {\n      title: \"Phone Number\",\n      field: \"phoneNumber\",\n      type: \"numeric\",\n      editable: 'onUpdate'\n    }],\n    data: chiropractorDetails,\n    actions: [{\n      icon: () => /*#__PURE__*/React.createElement(DeleteOutline, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 35\n        }\n      }),\n      tooltip: 'delete User',\n      onClick: (event, rowData) => {\n        // Do save operation\n        deletePost(rowData.chiropractorId);\n        console.log(rowData.chiropractorId);\n      }\n    }],\n    options: {\n      sorting: true,\n      actionsColumnIndex: -1\n    },\n    editable: {\n      onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          const dataUpdate = { ...chiropractorDetails\n          };\n          const index = oldData.tableData.id;\n          dataUpdate[index] = newData;\n          setchiropractorDetails([...dataUpdate]);\n          console.log(oldData);\n          console.log(dataUpdate);\n          resolve();\n        }, 1000);\n      })\n    },\n    isLoading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }), chiropractorDetails.map(x => /*#__PURE__*/React.createElement(\"li\", {\n    key: x.chiropractorId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 22\n    }\n  }, \" \", x.firstName, \" \", x.lastName, \" \", x.emailAddress, \" \", x.phoneNumber, \" \", x.timeCreated, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"default\",\n    onClick: () => editPost(x.chiropractorId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: () => deletePost(x.chiropractorId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, \" Delete\"))));\n};\nexport default Chiropractors;","map":{"version":3,"sources":["C:/Users/antho/source/repos/MSA-Phase-Two/view/src/components/Chiropractors/Chiropractors.tsx"],"names":["React","useState","useEffect","forwardRef","getArray","postArray","editArray","deleteArray","useForm","Button","TextField","MaterialTable","ChevronLeft","ChevronRight","Search","Clear","DeleteOutline","Edit","FirstPage","LastPage","Chiropractors","tableIcons","props","ref","Delete","NextPage","PreviousPage","ResetSearch","chiropractorDetails","setchiropractorDetails","formData","setFormData","handleSubmit","errors","isLoading","setIsLoading","handleChange","e","target","name","value","console","log","onSubmit","data","deletePost","id","editPost","makeArrayRequest","firstName","message","title","field","editable","type","icon","tooltip","onClick","event","rowData","chiropractorId","sorting","actionsColumnIndex","onRowUpdate","newData","oldData","Promise","resolve","reject","setTimeout","dataUpdate","index","tableData","map","x","lastName","emailAddress","phoneNumber","timeCreated"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, forwardRef } from 'react';\r\nimport { IChiropractors } from '../../common/Interface';\r\n\r\nimport { getArray, postArray, editArray, deleteArray } from '../../api/api';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nimport { Button, TextField } from \"@material-ui/core/\";\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Search from '@material-ui/icons/Search';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\n\r\nexport const Chiropractors = () => {\r\n\r\n    const tableIcons = {\r\n        Search: forwardRef((props, ref:React.Ref<SVGSVGElement>) => <Search {...props} ref={ref} />),\r\n        Delete: forwardRef((props, ref:React.Ref<SVGSVGElement>) => <DeleteOutline {...props} ref={ref} />),\r\n        Edit: forwardRef((props, ref:React.Ref<SVGSVGElement>) => <Edit {...props} ref={ref} />),\r\n        Clear: forwardRef((props, ref:React.Ref<SVGSVGElement>) => <Clear {...props} ref={ref} />),\r\n        FirstPage: forwardRef((props, ref:React.Ref<SVGSVGElement>) => <FirstPage {...props} ref={ref} />),\r\n        LastPage: forwardRef((props, ref:React.Ref<SVGSVGElement>) => <LastPage {...props} ref={ref} />),\r\n        NextPage: forwardRef((props, ref:React.Ref<SVGSVGElement>) => <ChevronRight {...props} ref={ref} />),\r\n        PreviousPage: forwardRef((props, ref:React.Ref<SVGSVGElement>) => <ChevronLeft {...props} ref={ref} />),\r\n        ResetSearch: forwardRef((props, ref:React.Ref<SVGSVGElement>) => <Clear {...props} ref={ref} />)\r\n    }\r\n\r\n\r\n    const [chiropractorDetails, setchiropractorDetails] = useState<any[]>([]);\r\n    const [formData, setFormData] = useState<any[]>([]);\r\n    const { handleSubmit, errors } = useForm<IChiropractors>();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    // const [columns, setColumns] = useState<any[]>([\r\n    //         { title: \"First Name\", field: \"firstName\" },\r\n    //         { title: \"Last Name\", field: \"lastName\" },\r\n    //         { title: \"Email Address\", field: \"emailAddress\" },\r\n    //         { title: \"Phone Number\", field: \"phoneNumber\", type: \"numeric\" },\r\n    // ])\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value })\r\n        console.log(formData)\r\n    }\r\n\r\n    const onSubmit = (data: IChiropractors | {}) => {\r\n        console.log(\"Submit: \", formData);\r\n        postArray(formData)\r\n    }\r\n\r\n    const deletePost = async (id: any) => {\r\n        await deleteArray(id)\r\n    };\r\n\r\n    const editPost = async (id: any | {}) => {\r\n        console.log(id);\r\n        await editArray(id)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        const makeArrayRequest = async () => {\r\n            setchiropractorDetails(await getArray());\r\n        }\r\n        makeArrayRequest();\r\n        setIsLoading(false);\r\n    }, [handleChange, deletePost, editPost])\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <h3>Add new Chiropractor</h3>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <label>Id: </label>\r\n                    <TextField\r\n                        type=\"text\"\r\n                        id=\"id\"\r\n                        name=\"ID\"\r\n                    />\r\n                \r\n                <label>First Name: </label>\r\n                <TextField\r\n                    type=\"text\"\r\n                    id=\"firstName\"\r\n                    name=\"firstName\"\r\n                    onChange={handleChange}\r\n\r\n                />\r\n\r\n                {errors.firstName && errors.firstName.message}\r\n                <label>Last Name: </label>\r\n                <TextField\r\n                    type=\"text\"\r\n                    id=\"lastName\"\r\n                    name=\"lastName\"\r\n                    onChange={handleChange}\r\n                />\r\n                <label>Email Address: </label>\r\n                <TextField\r\n                    type=\"text\"\r\n                    id=\"emailAddress\"\r\n                    name=\"emailAddress\"\r\n                    onChange={handleChange}\r\n                />\r\n                {/* <label>Phone Number: </label>\r\n                <TextField\r\n                    type=\"number\"\r\n                    id=\"phoneNumber\"\r\n                    name=\"phoneNumber\"\r\n                    onChange={handleChange}\r\n                /> */}\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\" value=\"Submit\">Add New</Button>\r\n            </form>\r\n\r\n            <MaterialTable\r\n                title=\"List of Chiropractors\"\r\n                icons={tableIcons}\r\n                columns={[\r\n                    { title: \"First Name\", field: \"firstName\" },\r\n                    { title: \"Last Name\", field: \"lastName\" },\r\n                    { title: \"Email Address\", field: \"emailAddress\", editable: 'onUpdate' },\r\n                    { title: \"Phone Number\", field: \"phoneNumber\", type: \"numeric\", editable: 'onUpdate' },\r\n            ]}\r\n                data={chiropractorDetails}\r\n                actions={[\r\n                    {\r\n                        icon: ()=><DeleteOutline/>,\r\n                        tooltip: 'delete User',\r\n                        onClick: (event, rowData) => {\r\n                            // Do save operation\r\n                            deletePost(rowData.chiropractorId)\r\n                            console.log(rowData.chiropractorId)\r\n                        }\r\n                    }\r\n                ]}\r\n                options={{\r\n                    sorting: true,\r\n                    actionsColumnIndex: -1,\r\n                }}\r\n\r\n                editable={{\r\n                    onRowUpdate: (newData, oldData) =>\r\n                    new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                           \r\n\r\n                          const dataUpdate = {...chiropractorDetails};\r\n                          const index = oldData.tableData.id;\r\n                          dataUpdate[index] = newData;\r\n                          setchiropractorDetails([...dataUpdate]);\r\n                          console.log(oldData);\r\n                          console.log(dataUpdate);\r\n                          resolve();\r\n                        }, 1000)\r\n                    })\r\n                }}\r\n                isLoading={isLoading}\r\n            />\r\n\r\n             {chiropractorDetails.map(\r\n                x => <li key={x.chiropractorId}> {x.firstName} {x.lastName} {x.emailAddress} {x.phoneNumber} {x.timeCreated}                 \r\n                <Button variant=\"contained\" color=\"default\" onClick={() => editPost(x.chiropractorId)}>Update</Button>\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={() => deletePost(x.chiropractorId)}> Delete</Button>\r\n                \r\n                </li>\r\n                \r\n            )}\r\n        </>\r\n    )\r\n}\r\nexport default Chiropractors;"]},"metadata":{},"sourceType":"module"}