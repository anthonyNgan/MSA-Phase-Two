{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antho\\\\source\\\\repos\\\\MSA-Phase-Two\\\\view\\\\src\\\\components\\\\Chiropractors\\\\Chiropractors.tsx\";\nimport React, { useState, useEffect, forwardRef } from 'react';\nimport { getArray, postArray, editArray, deleteArray } from '../../api/api';\nimport { useForm } from 'react-hook-form';\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogTitle } from \"@material-ui/core/\";\nimport MaterialTable from \"material-table\";\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Search from '@material-ui/icons/Search';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nexport const Chiropractors = () => {\n  const tableIcons = {\n    Search: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Search, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 70\n      }\n    }))),\n    Delete: forwardRef((props, ref) => /*#__PURE__*/React.createElement(DeleteOutline, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 70\n      }\n    }))),\n    Edit: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Edit, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 68\n      }\n    }))),\n    Clear: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 69\n      }\n    }))),\n    FirstPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FirstPage, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 73\n      }\n    }))),\n    LastPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(LastPage, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 72\n      }\n    }))),\n    NextPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 72\n      }\n    }))),\n    PreviousPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronLeft, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 76\n      }\n    }))),\n    ResetSearch: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 75\n      }\n    })))\n  };\n  const [chiropractorDetails, setchiropractorDetails] = useState([]);\n  const [formData, setFormData] = useState([]);\n  const [editData, setEditData] = useState([]);\n  const {\n    handleSubmit,\n    errors\n  } = useForm();\n  const [isLoading, setIsLoading] = useState(false);\n  const [openModal, setOpenModal] = useState(false);\n  const [formEditData, setFormEditData] = useState();\n\n  const handleClose = () => {\n    setOpenModal(false);\n  };\n\n  const columns = [{\n    title: \"First Name\",\n    field: \"firstName\"\n  }, {\n    title: \"Last Name\",\n    field: \"lastName\"\n  }, {\n    title: \"Email Address\",\n    field: \"emailAddress\"\n  }, {\n    title: \"Phone Number\",\n    field: \"phoneNumber\",\n    type: \"numeric\"\n  }];\n\n  const makeArrayRequest = async () => {\n    setchiropractorDetails(await getArray());\n  };\n\n  const handleChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n    console.log(formData);\n  };\n\n  const onSubmit = data => {\n    console.log(\"Submit: \", formData);\n    postArray(formData);\n    makeArrayRequest();\n  };\n\n  const deletePost = async id => {\n    await deleteArray(id);\n    makeArrayRequest();\n  };\n\n  const editPost = async () => {\n    console.log(formEditData);\n    await editArray(formEditData); // send data to the update method\n    // fetch all the data again get method\n\n    makeArrayRequest();\n    handleClose();\n  };\n\n  const handleEditChange = e => {\n    setFormEditData({ ...formEditData,\n      [e.target.name]: e.target.value\n    });\n    console.log(formEditData);\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    makeArrayRequest();\n    setIsLoading(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"Add new Chiropractor\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"Id: \"), /*#__PURE__*/React.createElement(TextField, {\n    type: \"text\",\n    id: \"id\",\n    name: \"ID\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, \"First Name: \"), /*#__PURE__*/React.createElement(TextField, {\n    type: \"text\",\n    id: \"firstName\",\n    name: \"firstName\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, \"Last Name: \"), /*#__PURE__*/React.createElement(TextField, {\n    type: \"text\",\n    id: \"lastName\",\n    name: \"lastName\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, \"Email Address: \"), /*#__PURE__*/React.createElement(TextField, {\n    type: \"text\",\n    id: \"emailAddress\",\n    name: \"emailAddress\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    value: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, \"Add New\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"default\",\n    onClick: () => editPost(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, \"Update\")), /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"List of Chiropractors\",\n    icons: tableIcons,\n    columns: columns,\n    data: chiropractorDetails,\n    actions: [{\n      icon: () => /*#__PURE__*/React.createElement(Edit, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 37\n        }\n      }),\n      tooltip: 'Edit User',\n      onClick: (event, rowData) => {\n        // Do save operation\n        // editPost(rowData.chiropractorId)\n        setOpenModal(true);\n        setFormEditData(rowData);\n        console.log(rowData.chiropractorId);\n      }\n    }, {\n      icon: () => /*#__PURE__*/React.createElement(DeleteOutline, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 37\n        }\n      }),\n      tooltip: 'delete User',\n      onClick: (event, rowData) => {\n        // Do save operation\n        deletePost(rowData.chiropractorId);\n        console.log(rowData.chiropractorId);\n      }\n    }],\n    options: {\n      sorting: true,\n      actionsColumnIndex: -1\n    },\n    isLoading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Dialog, {\n    open: openModal,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, \"First Name: \"), /*#__PURE__*/React.createElement(TextField, {\n    type: \"text\",\n    id: \"firstName\",\n    name: \"firstName\",\n    value: formEditData && formEditData.firstName ? formEditData.firstName : null,\n    onChange: handleEditChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, \"Last Name: \"), /*#__PURE__*/React.createElement(TextField, {\n    type: \"text\",\n    id: \"lastName\",\n    name: \"lastName\",\n    value: formEditData && formEditData.lastName ? formEditData.lastName : null,\n    onChange: handleEditChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }, \"Email Address: \"), /*#__PURE__*/React.createElement(TextField, {\n    type: \"text\",\n    id: \"emailAddress\",\n    name: \"emailAddress\",\n    value: formEditData && formEditData.lastName ? formEditData.emailAddress : null,\n    onChange: handleEditChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: editPost,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\nexport default Chiropractors;","map":{"version":3,"sources":["C:/Users/antho/source/repos/MSA-Phase-Two/view/src/components/Chiropractors/Chiropractors.tsx"],"names":["React","useState","useEffect","forwardRef","getArray","postArray","editArray","deleteArray","useForm","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","MaterialTable","ChevronLeft","ChevronRight","Search","Clear","DeleteOutline","Edit","FirstPage","LastPage","Chiropractors","tableIcons","props","ref","Delete","NextPage","PreviousPage","ResetSearch","chiropractorDetails","setchiropractorDetails","formData","setFormData","editData","setEditData","handleSubmit","errors","isLoading","setIsLoading","openModal","setOpenModal","formEditData","setFormEditData","handleClose","columns","title","field","type","makeArrayRequest","handleChange","e","target","name","value","console","log","onSubmit","data","deletePost","id","editPost","handleEditChange","icon","tooltip","onClick","event","rowData","chiropractorId","sorting","actionsColumnIndex","firstName","lastName","emailAddress"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, forwardRef } from 'react';\r\nimport { IChiropractors } from '../../common/Interface';\r\n\r\nimport { getArray, postArray, editArray, deleteArray } from '../../api/api';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nimport { Button, TextField, Modal, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@material-ui/core/\";\r\n\r\nimport MaterialTable, { Column } from \"material-table\";\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Search from '@material-ui/icons/Search';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\n\r\n\r\nexport const Chiropractors = () => {\r\n\r\n    const tableIcons = {\r\n        Search: forwardRef((props, ref: React.Ref<SVGSVGElement>) => <Search {...props} ref={ref} />),\r\n        Delete: forwardRef((props, ref: React.Ref<SVGSVGElement>) => <DeleteOutline {...props} ref={ref} />),\r\n        Edit: forwardRef((props, ref: React.Ref<SVGSVGElement>) => <Edit {...props} ref={ref} />),\r\n        Clear: forwardRef((props, ref: React.Ref<SVGSVGElement>) => <Clear {...props} ref={ref} />),\r\n        FirstPage: forwardRef((props, ref: React.Ref<SVGSVGElement>) => <FirstPage {...props} ref={ref} />),\r\n        LastPage: forwardRef((props, ref: React.Ref<SVGSVGElement>) => <LastPage {...props} ref={ref} />),\r\n        NextPage: forwardRef((props, ref: React.Ref<SVGSVGElement>) => <ChevronRight {...props} ref={ref} />),\r\n        PreviousPage: forwardRef((props, ref: React.Ref<SVGSVGElement>) => <ChevronLeft {...props} ref={ref} />),\r\n        ResetSearch: forwardRef((props, ref: React.Ref<SVGSVGElement>) => <Clear {...props} ref={ref} />)\r\n    }\r\n\r\n    const [chiropractorDetails, setchiropractorDetails] = useState<any[]>([]);\r\n    const [formData, setFormData] = useState<any[]>([]);\r\n    const [editData, setEditData] = useState<any>([]);\r\n    const { handleSubmit, errors } = useForm<IChiropractors>();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [openModal, setOpenModal] = useState<boolean>(false);\r\n    const [formEditData, setFormEditData] = useState<any>();\r\n    \r\n\r\n\r\n    const handleClose = () => {\r\n        setOpenModal(false);\r\n      };\r\n\r\n    type RowData = {}\r\n\r\n    const columns = [\r\n        { title: \"First Name\", field: \"firstName\" },\r\n        { title: \"Last Name\", field: \"lastName\" },\r\n        { title: \"Email Address\", field: \"emailAddress\" },\r\n        { title: \"Phone Number\", field: \"phoneNumber\", type: \"numeric\" },\r\n    ] as Column<RowData>[]\r\n\r\n    \r\n    const makeArrayRequest = async () => {\r\n        setchiropractorDetails(await getArray());\r\n    }\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value })\r\n        console.log(formData)\r\n    }\r\n\r\n    const onSubmit = (data: IChiropractors | {}) => {\r\n        console.log(\"Submit: \", formData);\r\n        postArray(formData)\r\n        makeArrayRequest();\r\n    }\r\n\r\n    const deletePost = async (id: any) => {\r\n        await deleteArray(id)\r\n        makeArrayRequest();\r\n    };\r\n\r\n    const editPost = async () => {\r\n        console.log(formEditData)\r\n        \r\n        await editArray(formEditData)\r\n        // send data to the update method\r\n        // fetch all the data again get method\r\n        makeArrayRequest();\r\n        handleClose();\r\n    }\r\n\r\n    const handleEditChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFormEditData({ ...formEditData, [e.target.name]: e.target.value })\r\n        console.log(formEditData)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        makeArrayRequest();\r\n        setIsLoading(false);\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <h3>Add new Chiropractor</h3>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <label>Id: </label>\r\n                <TextField\r\n                    type=\"text\"\r\n                    id=\"id\"\r\n                    name=\"ID\"\r\n                />\r\n                <label>First Name: </label>\r\n                <TextField\r\n                    type=\"text\"\r\n                    id=\"firstName\"\r\n                    name=\"firstName\"\r\n                    onChange={handleChange}\r\n                />\r\n                <label>Last Name: </label>\r\n                <TextField\r\n                    type=\"text\"\r\n                    id=\"lastName\"\r\n                    name=\"lastName\"\r\n                    onChange={handleChange}\r\n                />\r\n                <label>Email Address: </label>\r\n                <TextField\r\n                    type=\"text\"\r\n                    id=\"emailAddress\"\r\n                    name=\"emailAddress\"\r\n                    onChange={handleChange}\r\n                />\r\n                {/* <label>Phone Number: </label>\r\n                <TextField\r\n                    type=\"number\"\r\n                    id=\"phoneNumber\"\r\n                    name=\"phoneNumber\"\r\n                    onChange={handleChange}\r\n                /> */}\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\" value=\"Submit\">Add New</Button>\r\n                <Button variant=\"contained\" color=\"default\" onClick={() => editPost()}>Update</Button>\r\n\r\n            </form>\r\n\r\n            <MaterialTable\r\n                title=\"List of Chiropractors\"\r\n                icons={tableIcons}\r\n                columns={columns}\r\n                data={chiropractorDetails}\r\n                actions={[\r\n                    {\r\n                        icon: () => <Edit />,\r\n                        tooltip: 'Edit User',\r\n                        onClick: (event, rowData) => {\r\n                            // Do save operation\r\n                           // editPost(rowData.chiropractorId)\r\n                           setOpenModal(true)\r\n                           setFormEditData(rowData)\r\n                            console.log(rowData.chiropractorId)\r\n\r\n                        }\r\n                    },\r\n                    {\r\n                        icon: () => <DeleteOutline />,\r\n                        tooltip: 'delete User',\r\n                        onClick: (event, rowData) => {\r\n                            // Do save operation\r\n                            deletePost(rowData.chiropractorId)\r\n                            console.log(rowData.chiropractorId)\r\n                        }\r\n                    }\r\n                ]}\r\n                options={{\r\n                    sorting: true,\r\n                    actionsColumnIndex: -1,\r\n                }}\r\n                isLoading={isLoading}\r\n            />\r\n\r\n<Dialog open={openModal} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Edit</DialogTitle>\r\n        <DialogContent>\r\n        <form>  \r\n                <label>First Name: </label>\r\n                <TextField\r\n                    type=\"text\"\r\n                    id=\"firstName\"\r\n                    name=\"firstName\"\r\n                    value={formEditData&&formEditData.firstName?formEditData.firstName:null}\r\n                    onChange={handleEditChange}\r\n                />\r\n                <label>Last Name: </label>\r\n                <TextField\r\n                    type=\"text\"\r\n                    id=\"lastName\"\r\n                    name=\"lastName\"\r\n                    value={formEditData&&formEditData.lastName?formEditData.lastName:null}\r\n                    onChange={handleEditChange}\r\n                />\r\n                <label>Email Address: </label>\r\n                <TextField\r\n                    type=\"text\"\r\n                    id=\"emailAddress\"\r\n                    name=\"emailAddress\"\r\n                    value={formEditData&&formEditData.lastName?formEditData.emailAddress:null}\r\n                    onChange={handleEditChange}\r\n                />\r\n                {/* <label>Phone Number: </label>\r\n                <TextField\r\n                    type=\"number\"\r\n                    id=\"phoneNumber\"\r\n                    name=\"phoneNumber\"\r\n                    onChange={handleChange}\r\n                /> */}\r\n\r\n            </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={editPost} color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n        \r\n        </>\r\n    )\r\n}\r\nexport default Chiropractors;"]},"metadata":{},"sourceType":"module"}