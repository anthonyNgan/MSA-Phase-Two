{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\antho\\\\source\\\\repos\\\\MSA-Phase-Two\\\\View\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\antho\\\\source\\\\repos\\\\MSA-Phase-Two\\\\View\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"C:\\\\Users\\\\antho\\\\source\\\\repos\\\\MSA-Phase-Two\\\\View\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\antho\\\\source\\\\repos\\\\MSA-Phase-Two\\\\View\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\antho\\\\source\\\\repos\\\\MSA-Phase-Two\\\\View\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{getArray,postArray,editArray,deleteArray}from'../../api/api';import{useForm}from\"react-hook-form\";import{Button,TextField}from\"@material-ui/core/\";export var Chiropractors=function Chiropractors(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),chiropractorDetails=_useState2[0],setchiropractorDetails=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),formData=_useState4[0],setFormData=_useState4[1];var _useForm=useForm(),handleSubmit=_useForm.handleSubmit,errors=_useForm.errors;var handleChange=function handleChange(e){setFormData(_objectSpread(_objectSpread({},formData),{},_defineProperty({},e.target.name,e.target.value)));console.log(formData);};var onSubmit=function onSubmit(data){console.log(\"Submit: \",formData);postArray(formData);};var deletePost=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return deleteArray(id);case 2:case\"end\":return _context.stop();}}},_callee);}));return function deletePost(_x){return _ref.apply(this,arguments);};}();var editPost=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.log(id);_context2.next=3;return editArray(id);case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function editPost(_x2){return _ref2.apply(this,arguments);};}();useEffect(function(){var makeArrayRequest=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.t0=setchiropractorDetails;_context3.next=3;return getArray();case 3:_context3.t1=_context3.sent;(0,_context3.t0)(_context3.t1);case 5:case\"end\":return _context3.stop();}}},_callee3);}));return function makeArrayRequest(){return _ref3.apply(this,arguments);};}();makeArrayRequest();},[handleChange,deletePost,editPost]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h3\",null,\"List of Chiropractors\"),chiropractorDetails.map(function(x){return/*#__PURE__*/React.createElement(\"li\",{key:x.chiropractorId},\" \",x.firstName,\" \",x.lastName,\" \",x.emailAddress,\" \",x.phoneNumber,\" \",x.timeCreated);}),/*#__PURE__*/React.createElement(\"h3\",null,\"Add new Chiropractor\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit(onSubmit)},/*#__PURE__*/React.createElement(\"label\",null,\"Id: \"),/*#__PURE__*/React.createElement(TextField,{type:\"text\",id:\"id\",name:\"ID\"}),/*#__PURE__*/React.createElement(\"label\",null,\"First Name: \"),/*#__PURE__*/React.createElement(TextField,{type:\"text\",id:\"firstName\",name:\"firstName\",onChange:handleChange}),errors.firstName&&errors.firstName.message,/*#__PURE__*/React.createElement(\"label\",null,\"Last Name: \"),/*#__PURE__*/React.createElement(TextField,{type:\"text\",id:\"lastName\",name:\"lastName\",onChange:handleChange}),errors.lastname&&errors.lastname.message,/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",type:\"submit\",value:\"Submit\"},\"Submit\"),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"default\",onClick:function onClick(){return editPost(5);}},\"Update\"),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"secondary\",onClick:function onClick(){return deletePost(1);}},\" Delete\")));};export default Chiropractors;","map":{"version":3,"sources":["C:/Users/antho/source/repos/MSA-Phase-Two/view/src/components/Chiropractors/Chiropractors.tsx"],"names":["React","useState","useEffect","getArray","postArray","editArray","deleteArray","useForm","Button","TextField","Chiropractors","chiropractorDetails","setchiropractorDetails","formData","setFormData","handleSubmit","errors","handleChange","e","target","name","value","console","log","onSubmit","data","deletePost","id","editPost","makeArrayRequest","map","x","chiropractorId","firstName","lastName","emailAddress","phoneNumber","timeCreated","message","lastname"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { IChiropractors } from '../../common/Interface';\r\n\r\nimport { getArray, postArray, editArray, deleteArray } from '../../api/api';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { Button, TextField } from \"@material-ui/core/\";\r\n\r\nexport const Chiropractors = () => {\r\n\r\n    const [chiropractorDetails, setchiropractorDetails] = useState<any[]>([]);\r\n    const [formData, setFormData] = useState<any[]>([]);\r\n    const { handleSubmit, errors } = useForm<IChiropractors>();\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value })\r\n        console.log(formData)\r\n    }\r\n\r\n    const onSubmit = (data: IChiropractors | {}) => {\r\n        console.log(\"Submit: \", formData);\r\n        postArray(formData)\r\n    }\r\n\r\n    const deletePost = async (id: any) => {\r\n        await deleteArray(id)\r\n    };\r\n\r\n    const editPost = async (id: any | {}) => {\r\n        console.log(id);\r\n        await editArray(id)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const makeArrayRequest = async () => {\r\n            setchiropractorDetails(await getArray());\r\n        }\r\n        makeArrayRequest();\r\n    }, [handleChange, deletePost, editPost])\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>List of Chiropractors</h3>\r\n            {chiropractorDetails.map(x => <li key={x.chiropractorId}> {x.firstName} {x.lastName} {x.emailAddress} {x.phoneNumber} {x.timeCreated}</li>)}\r\n\r\n            <h3>Add new Chiropractor</h3>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <label>Id: </label>\r\n                <TextField\r\n                    type=\"text\"\r\n                    id=\"id\"\r\n                    name=\"ID\"\r\n                />\r\n                <label>First Name: </label>\r\n                <TextField\r\n                    type=\"text\"\r\n                    id=\"firstName\"\r\n                    name=\"firstName\"\r\n                    onChange={handleChange}\r\n\r\n                />\r\n\r\n                {errors.firstName && errors.firstName.message}\r\n                <label>Last Name: </label>\r\n                <TextField\r\n                    type=\"text\"\r\n                    id=\"lastName\"\r\n                    name=\"lastName\"\r\n                    onChange={handleChange}\r\n                />\r\n                {errors.lastname && errors.lastname.message}\r\n\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\" value=\"Submit\">Submit</Button>\r\n\r\n                <Button variant=\"contained\" color=\"default\" onClick={() => editPost(5)}>Update</Button>\r\n\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={() => deletePost(1)}> Delete</Button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\nexport default Chiropractors;"]},"metadata":{},"sourceType":"module"}